name: Jobs project CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    name: Test project
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
        working-directory: server

      - name: Run unit tests
        run: npm run test -- unit_tests.test.js

      - name: Run project in background
        run: |
          node index.js &
          sleep 5
        working-directory: server

      - name: Run integration tests
        run: npm run test -- index.test.js && npm run test -- job_tests.test.js
        working-directory: server/tests

      - name: Run coverage tests
        run: npm run coverage
        working-directory: server

  docker:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }}
          -p ${{ secrets.DOCKER_PASS }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .
        working-directory: server

      - name: Publish Docker image
        run: docker push ${{ secrets.DOCKER_REPO }}:latest

  deploy:
    name: Deploy latest image
    runs-on: ubuntu-latest
    needs: [ docker ]
    steps:
      - name: Deploy to server
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: cd /home/ubuntu/devops-project; sudo docker stack deploy --compose-file docker-compose.yml devops
          host: ${{ secrets.DEPLOY_HOST }}
          username: ubuntu
          privateKey: ${{ secrets.AWS_PEM }}





